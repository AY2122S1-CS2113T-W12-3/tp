@startuml
title Load Functionality

-> ":StorageFile": loadSaveFile(memberRoster : MemberRoster\n eventCatalog : EventCatalog)
activate ":StorageFile" #yellow
|||
":StorageFile" -> ":File" : File(DEFAULT_FILE_PATH)
activate ":File" #lightblue
return saveFile
|||
":StorageFile" -> ":StorageFile" : getStringsFromFile
activate ":StorageFile"
return encodedLines
|||
loop encodedLines
|||
    alt classType == 'm' ||\n classType=='e'
    |||
        ":StorageFile" -> ":StorageFile": add
        note right: Adds member/event to the respective roster/catalog
        activate ":StorageFile" #orange

        ":StorageFile"-> ":XYZDecoder": decodeXYZFromString(line)
        activate ":XYZDecoder" #lightblue
        note over ":XYZDecoder": Decoders for Member,\nTask and Event objects
        return decodedObject

        return
    |||
    else classType == 't'
    |||
        ":StorageFile" -> ":TaskDecoder": decodeTaskFromString
        activate ":TaskDecoder" #lightblue
        return decodedTask

        ":StorageFile" -> ":EventUpdater": updateEvent
        activate ":EventUpdater" #lightblue
        note over ":EventUpdater": Adds the decoded task to\nits event's list of tasks
        return

        ":StorageFile" -> ":MemberUpdater": updateMemberTasks
        activate ":MemberUpdater" #lightblue
        note over ":MemberUpdater": Within each member in the member\nroster that contains this task, add\nthis task to their task list
        return
    |||
    end
    |||
end
return
@enduml